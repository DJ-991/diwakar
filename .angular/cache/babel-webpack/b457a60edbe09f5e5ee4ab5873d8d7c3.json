{"ast":null,"code":"\"use strict\";\n/**\r\n * Created by orehman on 2/22/2017.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar core_1 = require(\"@angular/core\");\n\nvar DomHelper =\n/** @class */\nfunction () {\n  function DomHelper() {}\n  /**\r\n   * Polyfill for element.matches()\r\n   * See: https://developer.mozilla.org/en/docs/Web/API/Element/matches#Polyfill\r\n   * @param element\r\n   * @param selectorName\r\n   */\n\n\n  DomHelper.matches = function (element, selectorName) {\n    var proto = Element.prototype;\n\n    var func = proto['matches'] || proto.matchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector || proto.oMatchesSelector || proto.webkitMatchesSelector || function (s) {\n      var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n          i = matches.length;\n\n      while (--i >= 0 && matches.item(i) !== this) {}\n\n      return i > -1;\n    };\n\n    return func.call(element, selectorName);\n  };\n  /**\r\n   * Applies the specified css class on nativeElement\r\n   * @param elementRef\r\n   * @param className\r\n   */\n\n\n  DomHelper.addClass = function (elementRef, className) {\n    var e = this.getElementWithValidClassList(elementRef);\n\n    if (e) {\n      e.classList.add(className);\n    }\n  };\n  /**\r\n   * Removes the specified class from nativeElement\r\n   * @param elementRef\r\n   * @param className\r\n   */\n\n\n  DomHelper.removeClass = function (elementRef, className) {\n    var e = this.getElementWithValidClassList(elementRef);\n\n    if (e) {\n      e.classList.remove(className);\n    }\n  };\n  /**\r\n   * Gets element with valid classList\r\n   *\r\n   * @param elementRef\r\n   * @returns ElementRef | null\r\n   */\n\n\n  DomHelper.getElementWithValidClassList = function (elementRef) {\n    var e = elementRef instanceof core_1.ElementRef ? elementRef.nativeElement : elementRef;\n\n    if (e.classList !== undefined && e.classList !== null) {\n      return e;\n    }\n\n    return null;\n  };\n\n  return DomHelper;\n}();\n\nexports.DomHelper = DomHelper; //# sourceMappingURL=dom-helper.js.map","map":null,"metadata":{},"sourceType":"script"}