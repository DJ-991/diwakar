{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar core_1 = require(\"@angular/core\");\n\nvar ng_drag_drop_service_1 = require(\"../services/ng-drag-drop.service\");\n\nvar dom_helper_1 = require(\"../shared/dom-helper\");\n\nvar ɵngcc0 = require('@angular/core');\n\nvar ɵngcc1 = require('../services/ng-drag-drop.service');\n\nvar Draggable =\n/** @class */\nfunction () {\n  function Draggable(el, renderer, ng2DragDropService, zone) {\n    this.el = el;\n    this.renderer = renderer;\n    this.ng2DragDropService = ng2DragDropService;\n    this.zone = zone;\n    /**\r\n     * Currently not used\r\n     */\n\n    this.dragEffect = 'move';\n    /**\r\n     * Defines compatible drag drop pairs. Values must match both in draggable and droppable.dropScope.\r\n     */\n\n    this.dragScope = 'default';\n    /**\r\n     * The CSS class applied to a draggable element. If a dragHandle is defined then its applied to that handle\r\n     * element only. By default it is used to change the mouse over pointer.\r\n     */\n\n    this.dragHandleClass = 'drag-handle';\n    /**\r\n     * CSS class applied on the source draggable element while being dragged.\r\n     */\n\n    this.dragClass = 'drag-border';\n    /**\r\n     * CSS class applied on the drag ghost when being dragged.\r\n     */\n\n    this.dragTransitClass = 'drag-transit';\n    /**\r\n     * Event fired when Drag is started\r\n     */\n\n    this.onDragStart = new core_1.EventEmitter();\n    /**\r\n     * Event fired while the element is being dragged\r\n     */\n\n    this.onDrag = new core_1.EventEmitter();\n    /**\r\n     * Event fired when drag ends\r\n     */\n\n    this.onDragEnd = new core_1.EventEmitter();\n    /**\r\n     * @private\r\n     * Backing field for the dragEnabled property\r\n     */\n\n    this._dragEnabled = true;\n  }\n\n  Object.defineProperty(Draggable.prototype, \"dragImage\", {\n    get: function () {\n      return this._dragImage;\n    },\n\n    /**\r\n     * The url to image that will be used as custom drag image when the draggable is being dragged.\r\n     */\n    set: function (value) {\n      this._dragImage = value;\n      this.dragImageElement = new Image();\n      this.dragImageElement.src = this.dragImage;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Draggable.prototype, \"dragEnabled\", {\n    get: function () {\n      return this._dragEnabled;\n    },\n\n    /**\r\n     * Defines if drag is enabled. `true` by default.\r\n     */\n    set: function (value) {\n      this._dragEnabled = value;\n      this.applyDragHandleClass();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  ;\n\n  Draggable.prototype.ngOnInit = function () {\n    this.applyDragHandleClass();\n  };\n\n  Draggable.prototype.ngOnDestroy = function () {\n    this.unbindDragListeners();\n  };\n\n  Draggable.prototype.dragStart = function (e) {\n    var _this = this;\n\n    if (this.allowDrag()) {\n      // This is a kludgy approach to apply CSS to the drag helper element when an image is being dragged.\n      dom_helper_1.DomHelper.addClass(this.el, this.dragTransitClass);\n      setTimeout(function () {\n        dom_helper_1.DomHelper.addClass(_this.el, _this.dragClass);\n        dom_helper_1.DomHelper.removeClass(_this.el, _this.dragTransitClass);\n      }, 10);\n      this.ng2DragDropService.dragData = this.dragData;\n      this.ng2DragDropService.scope = this.dragScope; // Firefox requires setData() to be called otherwise the drag does not work.\n      // We don't use setData() to transfer data anymore so this is just a dummy call.\n\n      if (e.dataTransfer != null) {\n        e.dataTransfer.setData('text', '');\n      } // Set dragImage\n\n\n      if (this.dragImage) {\n        e.dataTransfer.setDragImage(this.dragImageElement, 0, 0);\n      }\n\n      e.stopPropagation();\n      this.onDragStart.emit(e);\n      this.ng2DragDropService.onDragStart.next();\n      this.zone.runOutsideAngular(function () {\n        _this.unbindDragListener = _this.renderer.listen(_this.el.nativeElement, 'drag', function (dragEvent) {\n          _this.drag(dragEvent);\n        });\n      });\n    } else {\n      e.preventDefault();\n    }\n  };\n\n  Draggable.prototype.drag = function (e) {\n    this.onDrag.emit(e);\n  };\n\n  Draggable.prototype.dragEnd = function (e) {\n    this.unbindDragListeners();\n    dom_helper_1.DomHelper.removeClass(this.el, this.dragClass);\n    this.ng2DragDropService.onDragEnd.next();\n    this.onDragEnd.emit(e);\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  Draggable.prototype.mousedown = function (e) {\n    this.mouseDownElement = e.target;\n  };\n\n  Draggable.prototype.allowDrag = function () {\n    if (this.dragHandle) {\n      return dom_helper_1.DomHelper.matches(this.mouseDownElement, this.dragHandle) && this.dragEnabled;\n    } else {\n      return this.dragEnabled;\n    }\n  };\n\n  Draggable.prototype.applyDragHandleClass = function () {\n    var dragElement = this.getDragHandleElement();\n\n    if (!dragElement) {\n      return;\n    }\n\n    if (this.dragEnabled) {\n      dom_helper_1.DomHelper.addClass(dragElement, this.dragHandleClass);\n    } else {\n      dom_helper_1.DomHelper.removeClass(this.el, this.dragHandleClass);\n    }\n  };\n\n  Draggable.prototype.getDragHandleElement = function () {\n    var dragElement = this.el;\n\n    if (this.dragHandle) {\n      dragElement = this.el.nativeElement.querySelector(this.dragHandle);\n    }\n\n    return dragElement;\n  };\n\n  Draggable.prototype.unbindDragListeners = function () {\n    if (this.unbindDragListener) {\n      this.unbindDragListener();\n    }\n  };\n  /** @nocollapse */\n\n\n  Draggable.ctorParameters = function () {\n    return [{\n      type: core_1.ElementRef\n    }, {\n      type: core_1.Renderer2\n    }, {\n      type: ng_drag_drop_service_1.NgDragDropService\n    }, {\n      type: core_1.NgZone\n    }];\n  };\n\n  Draggable.propDecorators = {\n    dragData: [{\n      type: core_1.Input\n    }],\n    dragHandle: [{\n      type: core_1.Input\n    }],\n    dragEffect: [{\n      type: core_1.Input\n    }],\n    dragScope: [{\n      type: core_1.Input\n    }],\n    dragHandleClass: [{\n      type: core_1.Input\n    }],\n    dragClass: [{\n      type: core_1.Input\n    }],\n    dragTransitClass: [{\n      type: core_1.Input\n    }],\n    dragImage: [{\n      type: core_1.Input\n    }],\n    dragEnabled: [{\n      type: core_1.HostBinding,\n      args: ['draggable']\n    }, {\n      type: core_1.Input\n    }],\n    onDragStart: [{\n      type: core_1.Output\n    }],\n    onDrag: [{\n      type: core_1.Output\n    }],\n    onDragEnd: [{\n      type: core_1.Output\n    }],\n    dragStart: [{\n      type: core_1.HostListener,\n      args: ['dragstart', ['$event']]\n    }],\n    dragEnd: [{\n      type: core_1.HostListener,\n      args: ['dragend', ['$event']]\n    }],\n    mousedown: [{\n      type: core_1.HostListener,\n      args: ['mousedown', ['$event']]\n    }, {\n      type: core_1.HostListener,\n      args: ['touchstart', ['$event']]\n    }]\n  };\n\n  Draggable.ɵfac = function Draggable_Factory(t) {\n    return new (t || Draggable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NgDragDropService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n\n  Draggable.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: Draggable,\n    selectors: [[\"\", \"draggable\", \"\"]],\n    hostVars: 1,\n    hostBindings: function Draggable_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"dragstart\", function Draggable_dragstart_HostBindingHandler($event) {\n          return ctx.dragStart($event);\n        })(\"dragend\", function Draggable_dragend_HostBindingHandler($event) {\n          return ctx.dragEnd($event);\n        })(\"mousedown\", function Draggable_mousedown_HostBindingHandler($event) {\n          return ctx.mousedown($event);\n        })(\"touchstart\", function Draggable_touchstart_HostBindingHandler($event) {\n          return ctx.mousedown($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"draggable\", ctx.dragEnabled);\n      }\n    },\n    inputs: {\n      dragEffect: \"dragEffect\",\n      dragScope: \"dragScope\",\n      dragHandleClass: \"dragHandleClass\",\n      dragClass: \"dragClass\",\n      dragTransitClass: \"dragTransitClass\",\n      dragImage: \"dragImage\",\n      dragEnabled: \"dragEnabled\",\n      dragData: \"dragData\",\n      dragHandle: \"dragHandle\"\n    },\n    outputs: {\n      onDragStart: \"onDragStart\",\n      onDrag: \"onDrag\",\n      onDragEnd: \"onDragEnd\"\n    }\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return Draggable;\n}();\n\nexports.Draggable = Draggable; //# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":null,"metadata":{},"sourceType":"script"}