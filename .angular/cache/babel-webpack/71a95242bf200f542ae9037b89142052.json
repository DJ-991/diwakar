{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar rxjs_1 = require(\"rxjs\");\n\nvar operators_1 = require(\"rxjs/operators\");\n\nvar core_1 = require(\"@angular/core\");\n\nvar drop_event_model_1 = require(\"../shared/drop-event.model\");\n\nvar ng_drag_drop_service_1 = require(\"../services/ng-drag-drop.service\");\n\nvar dom_helper_1 = require(\"../shared/dom-helper\");\n\nvar ɵngcc0 = require('@angular/core');\n\nvar ɵngcc1 = require('../services/ng-drag-drop.service');\n\nvar Droppable =\n/** @class */\nfunction () {\n  function Droppable(el, renderer, ng2DragDropService, zone) {\n    this.el = el;\n    this.renderer = renderer;\n    this.ng2DragDropService = ng2DragDropService;\n    this.zone = zone;\n    /**\r\n     *  Event fired when Drag dragged element enters a valid drop target.\r\n     */\n\n    this.onDragEnter = new core_1.EventEmitter();\n    /**\r\n     * Event fired when an element is being dragged over a valid drop target\r\n     */\n\n    this.onDragOver = new core_1.EventEmitter();\n    /**\r\n     * Event fired when a dragged element leaves a valid drop target.\r\n     */\n\n    this.onDragLeave = new core_1.EventEmitter();\n    /**\r\n     * Event fired when an element is dropped on a valid drop target.\r\n     */\n\n    this.onDrop = new core_1.EventEmitter();\n    /**\r\n     * CSS class that is applied when a compatible draggable is being dragged over this droppable.\r\n     */\n\n    this.dragOverClass = 'drag-over-border';\n    /**\r\n     * CSS class applied on this droppable when a compatible draggable item is being dragged.\r\n     * This can be used to visually show allowed drop zones.\r\n     */\n\n    this.dragHintClass = 'drag-hint-border';\n    /**\r\n     * Defines compatible drag drop pairs. Values must match both in draggable and droppable.dropScope.\r\n     */\n\n    this.dropScope = 'default';\n    /**\r\n     * @private\r\n     * Backing field for the dropEnabled property\r\n     */\n\n    this._dropEnabled = true;\n    /**\r\n     * @private\r\n     * Field for tracking drag state. Helps when\r\n     * drag stop event occurs before the allowDrop()\r\n     * can be calculated (async).\r\n     */\n\n    this._isDragActive = false;\n    /**\r\n     * @private\r\n     * Field for tracking if service is subscribed.\r\n     * Avoids creating multiple subscriptions of service.\r\n     */\n\n    this._isServiceActive = false;\n  }\n\n  Object.defineProperty(Droppable.prototype, \"dropEnabled\", {\n    get: function () {\n      return this._dropEnabled;\n    },\n\n    /**\r\n     * Defines if drop is enabled. `true` by default.\r\n     */\n    set: function (value) {\n      this._dropEnabled = value;\n\n      if (this._dropEnabled === true) {\n        this.subscribeService();\n      } else {\n        this.unsubscribeService();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  ;\n\n  Droppable.prototype.ngOnInit = function () {\n    if (this.dropEnabled === true) {\n      this.subscribeService();\n    }\n  };\n\n  Droppable.prototype.ngOnDestroy = function () {\n    this.unsubscribeService();\n    this.unbindDragListeners();\n  };\n\n  Droppable.prototype.dragEnter = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.onDragEnter.emit(e);\n  };\n\n  Droppable.prototype.dragOver = function (e, result) {\n    if (result) {\n      dom_helper_1.DomHelper.addClass(this.el, this.dragOverClass);\n      e.preventDefault();\n      this.onDragOver.emit(e);\n    }\n  };\n\n  Droppable.prototype.dragLeave = function (e) {\n    dom_helper_1.DomHelper.removeClass(this.el, this.dragOverClass);\n    e.preventDefault();\n    this.onDragLeave.emit(e);\n  };\n\n  Droppable.prototype.drop = function (e) {\n    var _this = this;\n\n    this.allowDrop().subscribe(function (result) {\n      if (result && _this._isDragActive) {\n        dom_helper_1.DomHelper.removeClass(_this.el, _this.dragOverClass);\n        e.preventDefault();\n        e.stopPropagation();\n\n        _this.ng2DragDropService.onDragEnd.next();\n\n        _this.onDrop.emit(new drop_event_model_1.DropEvent(e, _this.ng2DragDropService.dragData));\n\n        _this.ng2DragDropService.dragData = null;\n        _this.ng2DragDropService.scope = null;\n      }\n    });\n  };\n\n  Droppable.prototype.allowDrop = function () {\n    var _this = this;\n\n    var allowed = false;\n    /* tslint:disable:curly */\n\n    /* tslint:disable:one-line */\n\n    if (typeof this.dropScope === 'string') {\n      if (typeof this.ng2DragDropService.scope === 'string') allowed = this.ng2DragDropService.scope === this.dropScope;else if (this.ng2DragDropService.scope instanceof Array) allowed = this.ng2DragDropService.scope.indexOf(this.dropScope) > -1;\n    } else if (this.dropScope instanceof Array) {\n      if (typeof this.ng2DragDropService.scope === 'string') allowed = this.dropScope.indexOf(this.ng2DragDropService.scope) > -1;else if (this.ng2DragDropService.scope instanceof Array) allowed = this.dropScope.filter(function (item) {\n        return _this.ng2DragDropService.scope.indexOf(item) !== -1;\n      }).length > 0;\n    } else if (typeof this.dropScope === 'function') {\n      allowed = this.dropScope(this.ng2DragDropService.dragData);\n\n      if (allowed instanceof rxjs_1.Observable) {\n        return allowed.pipe(operators_1.map(function (result) {\n          return result && _this.dropEnabled;\n        }));\n      }\n    }\n    /* tslint:enable:curly */\n\n    /* tslint:disable:one-line */\n\n\n    return rxjs_1.of(allowed && this.dropEnabled);\n  };\n\n  Droppable.prototype.subscribeService = function () {\n    var _this = this;\n\n    if (this._isServiceActive === true) {\n      return;\n    }\n\n    this._isServiceActive = true;\n    this.dragStartSubscription = this.ng2DragDropService.onDragStart.subscribe(function () {\n      _this._isDragActive = true;\n\n      _this.allowDrop().subscribe(function (result) {\n        if (result && _this._isDragActive) {\n          dom_helper_1.DomHelper.addClass(_this.el, _this.dragHintClass);\n\n          _this.zone.runOutsideAngular(function () {\n            _this.unbindDragEnterListener = _this.renderer.listen(_this.el.nativeElement, 'dragenter', function (dragEvent) {\n              _this.dragEnter(dragEvent);\n            });\n            _this.unbindDragOverListener = _this.renderer.listen(_this.el.nativeElement, 'dragover', function (dragEvent) {\n              _this.dragOver(dragEvent, result);\n            });\n            _this.unbindDragLeaveListener = _this.renderer.listen(_this.el.nativeElement, 'dragleave', function (dragEvent) {\n              _this.dragLeave(dragEvent);\n            });\n          });\n        }\n      });\n    });\n    this.dragEndSubscription = this.ng2DragDropService.onDragEnd.subscribe(function () {\n      _this._isDragActive = false;\n      dom_helper_1.DomHelper.removeClass(_this.el, _this.dragHintClass);\n\n      _this.unbindDragListeners();\n    });\n  };\n\n  Droppable.prototype.unsubscribeService = function () {\n    this._isServiceActive = false;\n\n    if (this.dragStartSubscription) {\n      this.dragStartSubscription.unsubscribe();\n    }\n\n    if (this.dragEndSubscription) {\n      this.dragEndSubscription.unsubscribe();\n    }\n  };\n\n  Droppable.prototype.unbindDragListeners = function () {\n    if (this.unbindDragEnterListener) {\n      this.unbindDragEnterListener();\n    }\n\n    if (this.unbindDragOverListener) {\n      this.unbindDragOverListener();\n    }\n\n    if (this.unbindDragLeaveListener) {\n      this.unbindDragLeaveListener();\n    }\n  };\n  /** @nocollapse */\n\n\n  Droppable.ctorParameters = function () {\n    return [{\n      type: core_1.ElementRef\n    }, {\n      type: core_1.Renderer2\n    }, {\n      type: ng_drag_drop_service_1.NgDragDropService\n    }, {\n      type: core_1.NgZone\n    }];\n  };\n\n  Droppable.propDecorators = {\n    onDragEnter: [{\n      type: core_1.Output\n    }],\n    onDragOver: [{\n      type: core_1.Output\n    }],\n    onDragLeave: [{\n      type: core_1.Output\n    }],\n    onDrop: [{\n      type: core_1.Output\n    }],\n    dragOverClass: [{\n      type: core_1.Input\n    }],\n    dragHintClass: [{\n      type: core_1.Input\n    }],\n    dropScope: [{\n      type: core_1.Input\n    }],\n    dropEnabled: [{\n      type: core_1.Input\n    }],\n    drop: [{\n      type: core_1.HostListener,\n      args: ['drop', ['$event']]\n    }]\n  };\n\n  Droppable.ɵfac = function Droppable_Factory(t) {\n    return new (t || Droppable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NgDragDropService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n\n  Droppable.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: Droppable,\n    selectors: [[\"\", \"droppable\", \"\"]],\n    hostBindings: function Droppable_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"drop\", function Droppable_drop_HostBindingHandler($event) {\n          return ctx.drop($event);\n        });\n      }\n    },\n    inputs: {\n      dragOverClass: \"dragOverClass\",\n      dragHintClass: \"dragHintClass\",\n      dropScope: \"dropScope\",\n      dropEnabled: \"dropEnabled\"\n    },\n    outputs: {\n      onDragEnter: \"onDragEnter\",\n      onDragOver: \"onDragOver\",\n      onDragLeave: \"onDragLeave\",\n      onDrop: \"onDrop\"\n    }\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return Droppable;\n}();\n\nexports.Droppable = Droppable; //# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":null,"metadata":{},"sourceType":"script"}